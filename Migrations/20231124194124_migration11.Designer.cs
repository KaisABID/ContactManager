// <auto-generated />
using System;
using ContactManager.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContactManager.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20231124194124_migration11")]
    partial class migration11
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ClientClientContact", b =>
                {
                    b.Property<int>("ClientContactsClientContactId")
                        .HasColumnType("int");

                    b.Property<int>("ClientsClientId")
                        .HasColumnType("int");

                    b.HasKey("ClientContactsClientContactId", "ClientsClientId");

                    b.HasIndex("ClientsClientId");

                    b.ToTable("ClientClientContact");
                });

            modelBuilder.Entity("ClientContactContact", b =>
                {
                    b.Property<int>("ClientContactsClientContactId")
                        .HasColumnType("int");

                    b.Property<int>("ContactsContactId")
                        .HasColumnType("int");

                    b.HasKey("ClientContactsClientContactId", "ContactsContactId");

                    b.HasIndex("ContactsContactId");

                    b.ToTable("ClientContactContact");
                });

            modelBuilder.Entity("ContactManager.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CP")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ClientAdress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ClientAdress1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ClientCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ClientNotes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tel2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("ContactManager.Models.ClientContact", b =>
                {
                    b.Property<int>("ClientContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.HasKey("ClientContactId");

                    b.ToTable("ClientContacts");
                });

            modelBuilder.Entity("ContactManager.Models.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactNotes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactTel1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactTel2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ContactId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("ContactManager.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ClientClientContact", b =>
                {
                    b.HasOne("ContactManager.Models.ClientContact", null)
                        .WithMany()
                        .HasForeignKey("ClientContactsClientContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContactManager.Models.Client", null)
                        .WithMany()
                        .HasForeignKey("ClientsClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClientContactContact", b =>
                {
                    b.HasOne("ContactManager.Models.ClientContact", null)
                        .WithMany()
                        .HasForeignKey("ClientContactsClientContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContactManager.Models.Contact", null)
                        .WithMany()
                        .HasForeignKey("ContactsContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
